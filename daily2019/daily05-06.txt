20190506
1.UDP 单播、广播和多播（组播）
    https://www.cnblogs.com/jingliming/p/4477264.html
    C# UDP 组播
    https://blog.csdn.net/qq_32493189/article/details/77855759
20190513
1.http://www.dxper.net/forum.php
    孤漠北海道
    jw61243421
20190516
1..net 协变 out T与逆变 in T https://www.cnblogs.com/CLR010/p/3274310.html
  值类型不支持与协变与逆变
  当前仅支持接口和委托的逆变与协变 ，不支持类和方法。
  数组天然支持协变
    string[] strings = new string[] { "string" };
    object[] objects = strings;
  in关键字作为泛型修饰符的话，那么那个泛型参数就只能用作方法的输入参数，或者只写属性的参数，不能作为方法返回值等，总之就是只能是“入”，不能出。
  out关键字反之。
  逆变和协变的本质其实就是oo多态以及参数传递流向与返回值传递流向的相反性
    interface IFoo<in T>
    {
     
    }
     
    interface IBar<in T>
    {
        void Test(IFoo<T> foo); //对吗？
    }
    你能看出上述代码有什么问题吗？我声明了in T，然后将他用于方法的参数了，一切正常。但出乎你意料的是，这段代码是无法编译通过的！反而是这样的代码通过了编译
    interface IFoo<in T>
    {
     
    }
     
    interface IBar<out T>
    {
        void Test(IFoo<T> foo); 
    }    
    什么？明明是out参数，我们却要将其用于方法的参数才合法？初看起来的确会有一些惊奇。我们需要费一些周折来理解这个问题
    现在我们考虑IBar<string>，它应该能够协变成IBar<object>，因为string是object的子类。
    因此IBar.Test(IFoo<string>)也就协变成了IBar.Test(IFoo<object>)。
    当我们调用这个协变后方法时，将会传入一个IFoo<object>作为参数。
    想一想，这个方法是从IBar.Test(IFoo<string>)协变来的，所以参数IFoo<object>必须能够变成IFoo<string>才能满足原函数的需要。
    这里对IFoo<object>的要求是它能够反变成IFoo<string>！而不是协变。
    也就是说，如果一个接口需要对T协变，那么这个接口所有方法的参数类型必须支持对T的反变。
    同理我们也可以看出，如果接口要支持对T反变，那么接口中方法的参数类型都必须支持对T协变才行。
    这就是方法参数的协变-反变互换原则。
    所以，我们并不能简单地说out参数只能用于返回值，它确实只能直接用于声明返回值类型，但是只要一个支持反变的类型协助，out类型参数就也可以用于参数类型！
    换句话说，in参数除了直接声明方法参数之外，也仅能借助支持协变的类型才能用于方法参数，仅支持对T反变的类型作为方法参数也是不允许的。
    
20190630
1.https://www.cnblogs.com/flx-2018-9-28/p/9816809.html
    INSERT INTO SELECT语句
    语句形式为：Insert into Table2(field1,field2,...) select value1,value2,... from Table1
    或者：Insert into Table2 select  *  from Table1
    注意：
    （1）要求目标表Table2必须存在，并且字段field,field2...也必须存在
    （2）注意Table2的主键约束，如果Table2有主键而且不为空，则 field1， field2...中必须包括主键
    （3）注意语法，不要加values，和插入一条数据的sql混了
    SELECT INTO FROM语句
    语句形式为：SELECT vale1, value2 into Table2 from Table1
    要求目标表Table2不存在，因为在插入时会自动创建表Table2，并将Table1中指定字段数据复制到Table2中。
    
2.SQL update select结合语句详解及应用
    UPDATE table1 alias
    SET (column_name,column_name ) = (
    SELECT (column_name, column_name)
    FROM table2
    WHERE column_name = alias.column_name)
    WHERE column_name = VALUE
    
    例子 UPDATE b 
            SET b.ClientName = a.name 
           FROM a,b    
          WHERE a.id = b.id