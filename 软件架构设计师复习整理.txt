信息系统基础

    信息
        香农->信息论 (控制论 系统论)
        信息->不确定性的减少 确定性的增加 系统有序程度的度量
        信息量->bit
        热力学->熵=>系统无序程度的度量=>信息 = -熵
        H(x) = -∑p(xi)log2p(xi) xi=>N个状态下的第i个状态 p(xi)第i个状态发生的概率
        客观性 客观<=>主观
        普遍性
        无限性
        动态性
        依附性
        变换性
        传递性
        层次性
        系统性
        转化性
        及时性
        安全性

    信息系统
        
        系统是指多个元素有机结合在一起,执行特定的功能以达到特定目标的结合体
        信息系统是输入数据,通过加工处理,产生信息的系统
        
        管理领域及问题
              |
          管理模型--------->信息系统
                          |
          系统实现条件-----
               |
           |--------|
          技术     环境
          
    信息系统工程

        生命周期:
        系统规划 => 开发请求 初步调查 可行性研究 审判
        系统分析 => 详细调查 逻辑设计 审查         
        系统设计 => 总体设计（概要设计） 详细设计（物理设计） 审查       
        系统实施(实现) => 编程调试 （网络布线 设备安装 软硬件联调） 系统转换 验收       
        系统运行与维护 => 系统维护 系统评价 => 修改
          
         总体规划
            战略规划
                以数据处理为核心围绕只能部门需求
                    企业系统规划法 BSP=> UC/CU 举证 (create-use)
                    关键成功因素法 CSF关键成功因素
                                   (确保企业生存发展的因素)
                                    类型  销售型=>销售渠道 产品=>研发生产
                                    阶段   
                    战略集合转化法 SST 1.说明企业战略集合
                                       2.企业战略集合转化为信息系统集合
                                       3.反复论证修改完善
                    
                以企业内部MIS为核心围绕企业整体需求
                    战略数据规划法 SDP 数据与数据类比较稳定/业务和流程经常变化 
                            |          建立企业模型和主题数据库=>面向业务主题的数据组织与存储（企业内共享 一个地方采集一次性输入）
                            |           文件环境 应用数据库 主题数据库 信息检索环境（动态 决策）
                詹姆斯马丁--|
                            |
                            |
                    信息工程法 IE 自上而下 
                                  分四个阶段：信息战略规划 业务领域分析 系统设计 系统构建
                    
                    战略栅格法 SG 2*2矩阵
                    
                综合考虑企业内外环境以集成为何型，围绕企业战略需求
                    价值链分析法 VCA
                    战略一致性模型SAM  企业信息化：企业战略转与信息化战略一致
                
                总结:每种方法反映一个侧面 相互重叠 都是概念性描述 没有具体工具 可操作性差 结合实际情况 sdp常用
        
        政府信息化与电子政务 政府对政府g2g 政府对企业g2b 政府对公众g2c 政府对公务员g2e
            存在问题
                认识不足重视不够
                缺乏整体性规划与统一标准
                政府流程重组未到位
                电子政务整体应用水平低
                公务员素质亟待提高
                电子政务立法滞后
                对电子政务安全问题缺乏正确认识
             国家电子政务标准化指南
                总则
                工程管理
                网络建设
                信息共享
                支撑技术
                信息安全

        企业信息化与电子商务
        
            企业资源计划 ERP
                企业资源：物流 资金流 信息流 人力资源管理
                ERP是一种管理思想->软件产品->管理系统
                模块：财会 会计核算 财务管理
                      物流 分销管理 库存管理 采购管理
                      生产控制管理  生产计划 物料需求计划 能力需求计划 车间控制 制造标准
                      人力资源管理 人力资源计划 招聘管理 工资核算 工时管理 差旅费核算
                开发模式 1. 二次开发 基于现有系统 模块化 投资小 周期短
                         2. 定制开发 个性需求 投资大 不可控程度高

            客户关系管理 CRM
                客户服务与支持
                客户群维系
                商机管理
                模块：触发中心 挖掘中心 => 支柱功能：市场营销与客户服务
                1.对销售 营销 和 客户服务流程的信息化
                2.对客户沟通手段的自动化处理
                3.对上述部分产生的数据进行处理产生客户只能
            
            供应链管理 SCM
            
                         供应商
                         
                        计划 采购
                零售商     退货      制造商
                        制造 配送
                        
                          分销商
            
            产品数据管理 PDM
                数据库和文档管理
                产品结构和配置管理
                生命周期和流程管理
                集成开发接口
            
            商业只能 BI
                需求分析
                数据仓库建模
                数据抽取
                建立BI分析报表
                用户培训和数据模拟测试
                系统改进和完善
                技术:数据仓库 数据挖掘 OLAP
                
            决策支持系统 DSS
                    |--------------------------------|
                数据库子系统<--->推理部分<--->模型库子系统
                    |                |              |
                     用   户   接   口   子   系   统
                                     |
                                    用户
                DSS与MIS区别
            
            知识管理
                显性知识
                隐性知识 知识生成工具:知识获取 知识合成 知识创新
                         只是编码工具:知识表现
                         知识转移工具:时间差异 空间差异 社会差异
                         
            业务流程重组
                BPR:是对企业的业务进行根本性的在思考和彻底性的再设计,从而获得可以用诸如成本、质量、服务和速度等方面的业绩来衡量的显著性的成就
                
                原则:以流程为中心 团队管理以人为本 以客户为导向
                
                步骤:项目启动
                     拟定计划
                     建立项目团队
                     分析充足流程
                     重新设计流程
                     设计评估
                     实施新的设计
                     持续改进
                
                规划步骤: 战略 流程 数据 功能 实施
            
            企业门户
                信息门户EIP
                知识门户EKP
                应用门户EAP
                企业通用门户
            
            电子商务
                B2C B2B C2C
                标准体系:
                    基础技术标准
                    业务标准
                    支撑体系标准
                    监督管理标准
                    
        信息资源管理
            信息资源规划IRP:
            
                业务主线:业务需求分析 系统功能建模\
      IRM基础标准(数据元素 分类编码 用户视图 概念数据库 罗技数据库)业务模型数据模型=>关联模型CU矩阵
                数据主线:数据需求分析 系统数据建模/
        
        信息化标准法律与规定
            信息资源
            信息网络
            信息技术应用
            信息产业
            信息化人才
            信息化政策法规和标准规范
        
系统开发基础

    系统规划 
        理想目标和冻结
            基础研究 应用研发 技术服务 产品使用
        理想价值判断
        项目选择和确定
            选择有核心价值的项目 评估选择项目 项目优先级排序 评估项目实施方式 平衡地选择合适的方案
        初步调查
            初步需求分析 企业基本状况 管理方式和基础数据挂历 现有系统状况
        可行性分析
            1.复查系统目标和规模
                角度 ：经济 技术 法律（社会） 用户使用（管理 运行）
            2.分析现有系统
                可以是现有信息系统或者人工流程
            3.导出新系统的高层逻辑模型
                领域 ER图 用例等等
            4.用户复核
                以上四个阶段往复循环
                
            5.提出并评价解决方案 
            6.确定最终推荐的解决方案 
                候选系统方案矩阵（包括现有矩阵）=> 可行性分析矩阵 评分
            7.草拟开发计划 
                粗略计划
            8.编制提交可行性分析报告
                引言 引用文件 可行性研究的前提 可选方案 所建议系统 经济可行性 技术可行性 法律可行性 用户使用可行性 其它与项目有关的问题 注解 附录
                GB-T8567-2006
                审核：可行性论证会 通过or驳回
                
        成本效益分析
            成本和收益 
                固定成本 变动成本 混合成本
                有形收益（经济收益） 无形收益（社会效益 品牌形象）
            盈亏临界分析
                利润 = （销售单价 - 单位变动成本） * 销售量 - 总固定成本
                盈亏临界点销售量 = 总固定成本/(销售单价 - 单位变动成本)
                盈亏临界点销售额 = 总固定成本/(1 - 单位变动成本/销售收入)
                例题：
                销售收入        800 假设x件
                材料陈本        300 变动成本
                分包费用        100 变动成本
                固定生产成本    130 固定成本
                毛利            270
                固定销售成本    150 固定成本
                利润            120
                
                总固定成本 = 130 + 150 = 280
                总变动成本 = 300 + 100 = 400
                销售收入 = 800
                盈亏临界点销售额 = 280 / (1 - 400/800) = 560
                
                假设销售x件 销售单价 = 800 / x
                            单位变动成本 = 400 / x
                盈亏临界点销售量 = 280 / (800/x - 400/x) = 0.7x
                盈亏临界点销售额 = 盈亏临界点销售量 * 销售单价 = 0.7x * 800/x = 560
                
            净现值分析
                P = F / (1 + i)n次方 i折/贴现率 一般为银行利率 1/(1 + i)n次方 折/贴现系数
                NPV = ∑(ci - co)/(1+i)t次方
                NPVR = NPV / P 净现值率 (投资收益 - 投资)/投资
                例题：i = 0.1
                                            建设期                     运营期
                年份                 0      1       合计      2       3       4       5       合计
                折现系数             1      0.91              0.83    0.75    0.68    0.62
                甲 年初投资额        -350   -150    -500
                   年末净现金流量                             150     200     250     400     1000
                   折现值            -350   -136.5  -486.5    124.5   150     170     248     692.5
                NPV = 692.5 - 486.5 = 206
                若i使NPV = 0 则i为内涵报酬率 IRR
            
            投资回收期与投资回报率
                静态投资回收期 不考虑时间价值 ->现金
                动态投资回收期 考虑时间价值   ->现值
                投资回报率 = 1 / 动态投资回收期  * 100%
                投资收益率（现值指数） = 投资收益 / 投资成本 * 100% or 100% + NPVR
                
    软件开发方法
        软件开发生命周期
            GB/T 8566-2007 
            基本过程：获取过程 供应过程 开发过程 运作过程 维护过程
            支持过程：文档编制 配置管理 质量保证 验证 确认 联合评审 审核 问题解决 易用性
            组织过程：管理 基础设施 改进 人力资源 重用大纲管理 领域工程
        软件开发模型
            瀑布模型:SDLC
                软件计划
                需求分析
                软件设计
                程序编码
                软件测试
                运行维护
            原型模型->演化模型->螺旋模型<-瀑布模型->增量模型（每个增量均发布一个可操作产品）
                                    |
                                 风险分析
            构建组装模型：
                需求分析和定义
                软件架构设计
                软件库的建立（具有可重用价值和功能相对独立的软件单元或模块）构建获取 构建管理 （标准 CORBA COM/DCOM EJB）
                应用软件构建
                测试和发布
            
            统一过程UP：用例驱动 架构为核心 迭代和增量
                初始：确定项目范围和边界
                      识别系统的关键用例
                      展示系统候选架构
                      估计项目费用和时间
                      评估项目风险
                细化：分析系统问题领域
                      建立软件架构基础
                      淘汰高风险元素
                构建：开发剩余构件
                      构件组装测试
                交付：β测试
                      制作发布版本
                      用户文档定稿
                      确认新系统
                      培训调整产品
                      
            敏捷方法： 自适应开发 水晶方法 特性驱动开发 极限编程
                基本原则 短平快的会以 小型版本发布 较少的文档 合作为重 客户直接参与 自动化测试 适应性计划调整 结对编程 测试驱动开发 持续继承 重构
                最佳实践 计划游戏 小型发布 隐喻 简单设计 测试现行 重构 结对编程 集体代码所有制 持续集成 每周工作40小时 现场客户 标准编码
                5大原则 快速反馈 简单性假设 逐步修改 提倡更改 优质工作
                4大价值 沟通 简单 反馈 勇气
            
            V模型：  开发<=>测试
            RAD模型：分解构件快速
            
        逆向工程
            现有系统->再工程：
                                逆向工程  
                                    实体关系模型 
                                    数和控制流模型
                                    程序和数据结构信息
                                    过程的设计表示
                                考虑新需求
                                正像工程
                                新系统
    
    需求工程
        需求开发：需求获取 需求分析 需求定义（需求规格说明书） 需求验证
        需求管理：定义需求基线 处理需求变更 需求跟踪
        
        需求获取
            分类：
                  业务需求 用户需求 系统需求
                  功能需求 性能需求 设计约束
                  基本需求 期望需求 兴奋需求
            方式：
                收集资料
                联合讨论会
                用户访谈
                书面调查
                现场观摩
                参加业务时间
                阅读历史文档
                抽样调查
        
        需求分析
            SA结构化需求分析 自顶向下逐层分解
            
                            行为模型
                                |
                            数据字典
                               / \
                       功能模型   数据模型
            
                功能模型=>数据流图（DFD）：数据流 加工 数据存储 外部实体
                                     分层：逐层分解 每个加工和存储至少有一个输入流一个输出流 数据守恒
                行为模型=>状态转换图（STD）：状态 时间 起点 终点
                数据模型=>ER图： 实体 联系
                数据字典:
                    数据元素 
                    数据结构 
                    数据流 
                    数据存储
                    加工逻辑
                        结构化语言 \
                        判定表     -详细设计
                        判定树     /
                    外部实体

            面向对象需求分析OOA
                UML统一建模语言
                    构造块
                        事物
                            结构事物
                                类
                                接口
                                协作
                                用例
                                活动类
                                构件
                                节点
                            行为事物
                                交互
                                状态机
                            分组事物
                                包
                            注释事物
                        关系
                            依赖
                            关联
                            泛化
                            实现
                        图
                            静态:类图 对象图 包图 组合结构图 用例图 构件图 部署图 制品图
                            动态:顺序图 通信图 定时图
                            状态图 活动图 交互概览图
                            
                    公共机制
                        规格说明
                        修饰
                        公共分类
                            类与对象
                            接口与实现
                        扩展机制
                            约束
                            构造型
                            标记值
                    规则
                        构造块命名
                    架构
                        逻辑视图
                        进程视图
                        实现视图
                        部署视图
                        用例视图
                
                用例模型
                    识别参与者
                    合并需求获得用例
                    细化用例描述
                        用例命名
                        简要说明
                        事件流
                        非功能需求
                        前后置条件
                        扩展点优先级
                    调整用例模型
                        包含:两个以上的用例包含同一个流程,单独抽象成用例;当一个用例比较复杂,分解成几个用例
                        扩展:备选的可选路径
                        泛化:具体抽象
                分析模型
                    定义概念类
                    识别类之间的关系
                        关联 依赖 泛化 聚合 组合 实现
                    为类添加职责
                    建立交互图
        需求定义
            严格定义法:所有需求都能被预先定义
                       开发人员与用户之间能够准确而清晰地交流
                       才用图形文字可以充分体现最终系统
            原型法:否定上述3条
                   有合适的系统开发环境
                   反复试完全需要和值得提倡的,需求一旦确定,就应遵从严格的方法
            编制需求规格说明书
        需求验证
            需求评审
            需求测试
            需求规格说明书->用户签字确认->基线
        需求风险管理
            带有风险的做法:
                        无足够的用户参与
                        忽略的用户分类
                        用户需求不断增加
                        模棱两可的需求
                        不必要的特性
                        过于精简的SRS
                        不准确的估算
        需求的跟踪
                           跟踪    跟踪     跟踪
            用户原始需求 <-----> 软件需求 <-----> 工作产品
                           反向             反向
            需求跟踪矩阵 原始需求<->软件用例<->产品元素
                正向: 行 反向: 列
    软件建模
        现有系统<->物理系统----->物理模型----->逻辑模型----->新逻辑模型----->新物理模型----->新物理系统<->新系统
        
    系统设计
        处理流程设计
            方法:
                价值链分析法
                客户关系分析法
                供应链分析法
                基于ERP的分析法
                业务流程重组
            业务流程图TFD:反映事务处理
                业务处理单为 业务处理  表格制作
                数据收集  存储  业务流向
            业务活动图BAM:业务流程运作过程
                业务流程调查
                业务流程分析
                业务流程实施 
            业务流程建模:实体 对象 活动
                标杆瞄准
                IDEF0 类似DFD逐层分解
                DEMO 业务事务
                Petri网 资源竞争性实用哦
                业务流程建模语言
                    BPEL
                    BPML
                    BPMN
                    XPDL:XML
                基于服务的BPM:
                    基于web服务的思想
                    关键在于哪些业务可以定义为服务
                    松散耦合\可复用
        人机界面设计
            置于用户控制之下
            减少用户的记忆负担
            保持界面的一致性
        结构化设计
            概要设计
            详细设计
                抽象化: 流程 控制 数据
                自顶向下逐步求精
                信息隐蔽: 封装
                模块独立: 
                    高内聚
                        功能内聚 顺序内聚 通信内聚 过程内聚 瞬时内聚 逻辑内聚 偶然内聚
                    低耦合
                        非直接耦合 数据耦合 标记耦合 控制耦合 外部耦合 公共耦合 内容耦合
                
        面向对象设计 提高可维护性和可复用性
            系统设计:确定实现系统的策略和目标系统的高层结构
            对象设计:确定解空间中的类、关联、接口形式及实现操作的算法
                单一职责
                开放封闭原则 抽象层 其它原则基础
                李氏替换原则
                依赖倒置原则
                组合重用原则
                接口隔离原则
                Demeter原则
            设计模式 名称 问题 解决方案 效果
                创建性模式
                    抽象工厂
                    工厂方法 (虚拟构造器)
                    建造者   
                    原型     浅拷贝  深拷贝
                    单例     
                结构性模式
                    适配器
                    桥接
                    组合
                    装饰
                    外观
                    享元
                    代理
                行为性模式
                    职责链
                    命令
                    解释器
                    迭代器
                    中介
                    备忘录
                    观察者
                    状态
                    策略
                    模板方法
                    访问者
    
    测试与评审
        测试类型
            动态测试
                黑盒
                白盒
                灰盒
            静态测试
                桌前检查
                代码审查
                代码走查
            单元测试
            集成测试 一次组装vs增量组装 (版本验证 冒烟测试)
            确认测试 内部确认测试 Alpha测试 Beta测试 验收测试
            系统测试 性能测试(压力 并发 负载 可靠性)
        测试用例设计
            黑盒:
                等价类划分
                边界值分析
                错误推测
                因果图
            白盒:
                基本路径
                循环覆盖
                逻辑覆盖
        面向对象的测试
            算法层 ->单元测试
            类  层 ->模块测试
            模版层 ->继承测试
            系统层 ->系统测试
        测试自动化
        软件调式
        软件评审 技术评审 管理评审
        验证与确认
            验证 确认 测试
        测试设计与管理
            缺陷估算
                错误植入模型 a1:b1 = a2:b2
                缺陷排除率
    软件开发环境与工具
        系统运行与评价
            系统转化计划
                直接转换
                并行转换
                分段转换
            数据迁移 抽取 转换 装载
                工具迁移
                手工录入
                切换后新生成
        软件维护
            易分析性
            易改变性
            稳定性
            易测试性
            维护性的依从性
            
            改正性维护
            适应性维护
            完善性维护
            预防性维护
            
            结构化维护流程
        
        系统监理
            咨询式监理
            里程碑式监理
            全程式监理
            
            投资 进度 质量 变更 安全管理 信息管理 合同管理 沟通协调
            
        系统评价
            性能评价
            效益评价
            建设评价
            
操作系统
    计算机硬件->操作系统->语言处理程序(中间件)->应用程序
                    |----------|
                         |
                      系统软件
                      
    进程管理
        进程状态
            三态: 就绪 <-> 运行 -> 等待
                    ↑______________|
                运行:占用cpu 就绪(仅缺cpu)与等待不占用cpu
                
            五态模型:
                            静止就绪<---------静止阻塞
                               ↑     \            ↑
                               |      \           |
                               |        运行      |
                               |      /      \    |
                               |     /        \   |
                               ↓                  ↓
                            活跃就绪<---------活跃阻塞
        前趋图
                              A 
                               \
            A->B->C->D->E =>  B--D--E
                               /
                              C
            入度/出度:
                入度为零执行然后删掉该点出度=>循环往复
            直接制约
                流程步骤
            间接制约
                互斥竞争 增加资源可以缓解
        进程同步与互斥
            PV操作
                临界资源
                临界区
                信号量
                
                生产者消费者
                    s1 = 1 s2 = 0
                    生产者            消费者
                        生产一个产品  p(s2)
                        p(s1)         从缓冲区取产品
                        送到缓冲区    v(s1)
                        v(s2)         消费产品
                
                前趋图例题
                    Sa = Sb = Sc = Sd = 0
                    A:V(Sa) B:V(Sb) C:V(Sc)
                    D:P(Sa,Sb,Sc) V(Sd)
                    E:P(Sd)
            死锁问题
                环路等待
                互斥
                保持和等待
                不剥削
                
                银行家算法
                
    存储管理
        分区存储组织: 单一连续分配 固定分区分配 可变分区分配
            首次适应算法
            最佳适应算法
            最差适应算法
            循环首次适应算法
            
        页式存储组织(分页定长)
                页号(31-16)|页内地址(15-0)
                    用户程序 页表(页号,物理块号) 内存
                    逻辑地址 + 页表寄存器 + 页表 =>物理地址 
                优点:利用率高 碎片小 分配以及管理简单
                缺点:增加熊开销 容易产生抖动现象
                
        段式存储组织(分段变长)
                段号(31-16)|段内地址(15-0)
                    作业空间 段表(段号,地址,段长) 内存
                    逻辑地址 + 控制寄存器 + 段表 =>物理地址 
                优点:多道程序共享内存 各段程序修改互不影响
                缺点:内存利用率低,内存碎片浪费大
        
        段页式存储组织(段内分页)
                优点:空间浪费小 存储共享容易 存储保护容易 能动态连接
                缺点:管理软件增加 复杂性开销增加 硬件和占用内容增加 执行速度下降
                
        例题:页面大小4K 逻辑地址8644(10进制)求物理地址 
             页表:
                    0  2
                    1  3
                    2  8
            若页面大小为4K 因为4K = 2的12次方 所以页内地址长度为12位 故低12位是页内地址
            8644 = 10|000111000100 =>页号为10 即2 =>块号为8 即1000 =>物理地址1000|000111000100=>33220
        
        局部性原理:
            时间局部性
            空间局部性
            工作集论
            
        页面置换算法
            OPT(理论模型 评判标准)
            RAND
            FIFO
                可能产生抖动 可分配页面变多反而缺页次数变多
            LRU
                局部性原理,不会抖动
    作业管理
        作业注册 作业调度 作业执行 作业终止
            挂起就绪 - 就绪 - 执行 - 阻塞 - 挂起阻塞
        调度算法
            优先数
            先来先服务
            短作业优先
            响应比优先
            定时轮转
        单个作业周转时间
            T = Te - Ts
            T = Tw + Tr
        作业平均周转时间
            T = (T1 + ... + Tn) / n
        单个作业带权周转时间 W = T / Tr
        作业平均带权周转时间
            W = (W1 + ... + Wn) / n
    文件管理
        索引文件结构
            索引结点(0 - 12) -> 物理盘块 直接索引
                             -> 间接索引 -> 物理盘块 一级间接索引
                             -> 间接索引 -> 间接索引 -> 物理盘块 二级间接索引
        树形目录结构
        文件分级管理
            系统级 用户级 目录级 文件级
        空闲空间管理
            空闲区表法
            空闲琏表法
            成组链接法
            位示图法
    设备管理
        数据传输控制方式
                程序控制方式:轮训
                程序中断方式:中断通知
                DMA方式
                通道:字节多路vs选择通道
                输入输出处理机
        虚设备与SPOOLING技术
            输入设备->输入进程->输入缓冲区->输入进程->输入井->输出井->输出进程->输出缓冲区->输出进程->输出设备
    重定向 >覆盖 >>追加
    管道 cmd1|cmd2
    
数据库系统
    数据库模式
        三级模式-两层映射
                    外模式 (视图)
            (外模式-概念模式映射) 
                    概念模式 (关系)
            (概念模式-内模式映射) 
                    内模式 (存储)
                      OS 
                  物理数据库
    规范化理论
        函数依赖
            给定x确定y x->y x决定y y函数依赖x
            部分依赖 (A,B) -> C 且存在A -> C 或者 B -> C
            传递依赖 A->B->C 且B->A不成立
        键/码
            超键 -> 唯一标识元组
             |   -> 消除多余属性
            候选键
             |   -> 任选一个
            主键
            外键 -> 其它关系的主键
            
            图示法求候选键 函数依赖->有向图 
                           入度为零的结点集合遍历图 
                           若入度为零的结点集合不能遍历,将中间结点加入,直至该集合能遍历所有结点,结果不唯一
        范式
            1NF 属性值是不可分的
             | -> 消除非主属性对候选键的部分依赖
            2NF
             | -> 消除非主属性对候选键的传递依赖
            3NF
             | -> 消除主属性对候选键的传递依赖
            BCNF
            消除  数据冗余 -> 更新异常 -> 插入异常 -> 删除异常
            
            主属性是包含于候选键的属性
            复合属性->转换为多列
            多值属性->转换为单独实体的多行
        模式分解
            保持函数依赖
            无损分解
            
              两个判定 R=>R1,R2
                R1∩R2 -> R1 - R2 or R1∩R2 -> R2 - R1
                
              多个判定 表格法
                        学号      姓名      课程号     课程名     分数
              成绩       a1        b12        a3         b14       a5
              学生       a1        a2         b23        b24       b25
              课程       b31       b32        a3         a4        b35
              根据函数依赖 看能否把某行b都改成a 若能则是无损分解 若不能则是有损分解
    数据库完整性约束
        实体完整性约束
            主键不能为空
            主键不能重复
        参照完整性约束
            外键约束
        用户自定义完整性约束->触发器
    并发控制
        事务: 原子性 一致性 个理性 持续性
        并发问题
            丢失更新
                T1 A = 10;T2 A = 10;T1 A = A - 5 写回;T2 A = A - 8 写回;
            不可重复读
                T1 A = 20 B = 30 A + B = 50;
                T2 A = 20 A = A + 50 写 A = 70;
                T1 A = 70 B = 30 A + B = 100; 验算错误
            读脏数据
                T1 A = 20 A = A + 50
                T2 A = 70;
                T1 ROLLBACK A = 20;
        封锁协议
            S封锁 读锁
            X封锁 写锁
            一级封锁 可防止丢失修改
            二级封锁 可防止读脏数据
            三级封锁 可防止不可重复读
            两段锁协议 可能死锁
        死锁问题
        
    数据库设计
        需求分析->数据流图 数据字典 需求说明
        概念结构设计-> ER图
        逻辑结构设计-> 规范化理论 => 关系模式
        物理设计 :DBMS OS 硬件
        
        ER模型
            构建局部ER模型:
            依次集成
            逐步集成,累加
            
            集成冲突
                属性冲突:属性域与属性值冲突
                命名冲突:同名异义和异名同义
                结构冲突:抽象层次不一样
    
    数据库安全
        用户标识与鉴定
        存取控制
        密码存储与传输
        视图的保护
        审计
        
    数据库备份
        冷备份 vs 热备份
        完全备份 vs 增量备份 vs 差异备份
        
    数据库恢复
        事务本身的可预期故障 rollback
        事务本身的不可预期故障 通过日志撤销修改,回退事务初始状态
        系统故障  检查点
        介质故障  日志重做
        
    分布式数据库
        全局DBMS 全局外模式 全局视图
                 全局概念模式 
                 分片模式:垂直分片 按列
                          水平分片 按行
                 分布模式:数据存放在哪些地
        局部DBMS 局部概念模式 局部内模式 局部数据库
        
        分布透明性
            分片透明性
            位置透明性
            局部数据模型透明性
        
        分布式数据库管理系统
            组成
                局部DBMS
                全局DBMS
                全局数据字典
                通信管理
            机构
                全局控制集中式
                全局控制分散式
                全局控制部分分散
        
        查询处理与优化
            全局查询树的变换
            副本的选择与多副本的更新策略
            查询树的分解
            半连接与直接连接
    
    数据仓库与数据挖掘
    
                    OLTP 联机事务处理                    OLAP 联机分析处理
    用户          操作人员,低层管理人员                 决策人员 高级管理人员
    功能              日常操作处理                        分析决策
    DB设计              面向应用                          面向主题
    数据            当前的最新的细节的                   历史的聚集的集成的
    存取              读写数十条记录                      读上百万条记录
    工作单位          简单事务                             复杂事务
    用户数            上千                                  上百
    DB大小             MB GB                                GB TB
    
    数据仓库:面向主题的 集成的 相对稳定的 随时间变化的
    分类:
        企业仓库 
        数据集市 面向特定部分
        虚拟仓库 逻辑上的
        
    组成:
              数据源
                | 抽取 清理 装载 刷新(统一格式)
        数据仓库 数据集市
                | OLAP服务 服务器
         数据挖掘工具、报表、查询
         
    数据挖掘
                          分析员录入--->|------知识发现管理系统管理器------|
                                        |                                  |
        数据仓库 -> 数据访问接口 -> 数据选择 -> 知识发现引擎抽取算法 -> 发现评价 -> 发现描述 -> 发现新规律
                                        |                |                 |
                      元数据/领域只是-> 知               识                库
                      
计算机网络
    开放互联参考模型 osi七层模型 
        
        -------------------------------------------------------------------------------------------
        应用层  具体应用功能                           
                                           \        POP3 FTP HTTP Telnet
        表示层  数据格式与表达,加密、压缩   =>      SMTP DHCP TFTP
                                           /        SNMP DNS 网关设备(连接两个不兼容系统高层协议转换)
        会话层  建立、管理和终止会话
        -------------------------------------------------------------------------------------------
        传输层  端到端的连接(端口号)                        TCP UDP
        -------------------------------------------------------------------------------------------
        网络层  分组(数据包)传输和路由选择              三层交换机 路由器 
                                                三层交换机具有路由功能 但主要还是用于高速数据交换
                                                路由器除了路由还具有协议转换功能
                                                ARP(IP->MAC) RARP(MAC->IP) IP ICMP(ping) IGMP(组播)
        -------------------------------------------------------------------------------------------
        数据链路层  传送以帧为单位的信息        网桥(连接同种类型网络)
                    (MAC地址)                   交换机(多端口网桥)
                                                    将Mac包(帧)从一个端口发送另一个端口 
                                                    MAC地址与端口映射
                                                网卡(包含MAC地址) 
                                                集线器(多端口中继器,向每个端口广播)
                                                PPTP L2TP SLIP PPP
        -------------------------------------------------------------------------------------------
        物理层  二进制传输 bit                  中继器 (功率放大) 集线器 (多端口中继)
        
        TCP三次握手 A<=>B
            A->B 第一次 SYN SEQ=X
            B->A 第二次 SYN SEQ=Y ACK=X+1
            A->B 第三次 SYN SEQ=X+1 ACK=Y+1
        
        可靠传输
                  甲           乙
        winsize = 1|->Send 1   |
                   |           |
        winsize = 1|->Send 2   |
                   |           |
                   |    ACK=2<-|winsize = 2
        winsize = 1|->Send 2   |
        winsize = 1|->Send 3   |
                   |    ACK=4<-|winsize = 1
             
        TCP/IP协议族
        TCP:POP3 FTP HTTP Telnet SMTP
        UDP:DHCP TFTP SNMP DNS
        NFS
    
    网络规划与设计
        需求分析
            网络功能的需求
            网络的性能要求
            网络运行环境的要求
            网络的可扩充性和可维护性要求
        网络规划原则
            实用性
            开放性
            先进性
        网络设计与实时原则
            可靠性
            安全性
            高效性
            可扩展性
        层次化网络设计
                Internet
                    |---->防火墙
            核心层 核心交换机
            汇聚层 汇聚交换机(可能多层,统称汇聚层)(突出安全性)
            接入层 接入交换机
             
    计算机网络分类
        按分布范围
                局域网
                城域网
                广域网
        按拓扑结构
                总线型
                星型(中心结点 交换机 常见局域网模型)
                环形
        IEEE 802.3
        10BASE5  同轴粗缆 总线  500m
        10BASE2  同轴细缆 总线  185m
        10BASE-T 双绞线   星型  100m
        10BASE-F 光钎对   星型  500m
        IEEE 802.3u
        100BASE-TX 5类非屏蔽双绞线/1,2类STP
        100BASE-FX 62.5/125多模光纤
        100BASE-T4 3类非屏蔽双绞线
        IEEE802.3以太网 IEEE802.5令牌环网 IEEE802.4令牌总线
        千兆以太网
            1000BASE-LX: 多模光纤 单模光钎 单模优于多模但是贵
            1000BASE-SX: 多模光钎
            1000BASE-CX: 铜缆
            1000BASE-T:  5类UTP
        无线局域网 802.11
            移动性 灵活性 成本低 容易扩充
            
    网络接入技术
        有线
            PSTN公用交换电话网络 POS机
            DDN数字数据网 专线
            ISDN综合业务数字网 电话线
            ADSL非对称数字用户线路
            FTTx+LAN光钎+局域网
            PON无缘光钎网络
            HFC同轴光钎技术 有线电视 闭路电视
        无线
            IEEE 802.11 Wifi
            IEEE 802.15 蓝牙
            红外IrDA
            WAPI
            
    网络存储技术
        直连式DAS          服务器+硬盘or阵列
        网络附加存储NAS    服务器+业务网络+存储服务器(cpu 内存 磁盘 网络接口)
        存储区域网络SAN    存储设备 + 存储网络(光钎通道交换机) + 服务器 + 业务网络 (昂贵)
        IPSAN(iSCSI)       存储设备 + 存储网络(以太网交换机) + 服务器 + 业务网络 (便宜)
        
    虚拟局域网 VLAN IEEE 802.1q
        功能
            提高管理效率
            控制广播数据
            增加网络的安全性
            实现虚拟工作组
        划分
            按交换机端口划分
            按MAC地址划分
            按第三层协议划分
            IP组播VLAN
            基于策略的VLAN
            按用户定义、非授权划分
            
软件架构设计
    软件架构的概念
        软件架构的定义
            需求分析         软件设计
                    \  架构  /
        软件架构的作用
        软件架构的发展
            无架构
              |--->汇编
            萌芽阶段
              |--->结构设计
            初级阶段
              |--->UML
            高级阶段 ---> 4+1 视图
        软件架构建模
            结构模型 *
                构建 连接件 架构描述语言
            框架模型
                整体结构
            动态模型 *
                系统大颗粒的行为性质 补充上面2个
            过程模型
                够系统的步骤和过程
            功能模型
                功能构建分层 特殊的框架模型
            
            4+1视图
            
            逻辑视图                开发视图
            (OO 类图 对象模型)      (UML实现视图,模块,子系统)  ======>静态
                          场景(重要系统活动的抽象
                                ,用例视图)
            进程视图                物理试图
            (非功能性需求,并发,性能 (部署视图,拓扑结构,安装,通信等) ======>动态
            分布,容错等)
            
        软件架构风格
            核心问题:架构级的软件复用
            架构风格:反映应用领域中众多系统所共有的结构和语义特性,并指导如何讲构件有效组织成一个完整系统
                     定义了用于描述系统的术语表和一组知道构建系统的规则
            
            数据流:批处理 管道/过滤器
            调用返回:主程序/子程序 面向对象 层次结构
            独立构建:进程通信 事件系统
            虚拟机风格:解释器 基于规则的系统
            仓库风格: 数据库系统 超文本系统 黑板系统
            
            两层CS架构
            三层CS架构
                缺点:
                    客户端不通用
                    升级维护麻烦
            三层BS架构
                缺点:缺乏动态页面支持
                     没有集成有效的数据库处理功能
                     安全性
                     响应速度
                     页面为单位提交,数据动态交互不强,不利于OLTP
            混合架构风格
            RIA富互联网应用
                弥补三层BS结构不足:
                    结合CS架构反应速度快交互性强的有点与BS架构传播范围广以及容易传播的特性
                    简化并改进了BS架构的用户交互
                    数据能被缓存在客户端从而可以实现一个比基于HTML的相应速度更快且数据往返于服务器的次数更少的用户界面
                AJAX
            SOA面向服务的架构 松散耦合 粗粒度 标准化接口
                服务总线
                流程管理器
                服务:服务接口 安全容错 ->逻辑层->数据访问->数据层
                对象 -> 构件 -> 服务
                    服务粗粒度
                    服务接口是标准的 wsdl
                    服务构建的实现与语言是无关的
                    服务构建可以通过构建容器提供Qos的服务
                关键技术
                    发现服务 UDDI DISCO
                        UUDI 统一描述发布集成
                           数据模型 描述企业和服务的XML Schema
                           UDDI API 用于查找和发布UDDI数据的方法基于SOAP
                           UDDI注册服务 基础设施 对应服务注册中心的角色
                        DISCO       
                            定义文档格式和询问算法,发现给定服务器上公开的服务
                            发现每个服务的功能通过文档,以及交互方式WSDL
                            发布->创建.disco文件
                    描述服务 WSDL XML Schema
                        WSDL
                            服务实现定义: 服务 端口
                            服务接口定义: 绑定 端口类型 消息 类型
                    消息格式 SOAP REST
                        SOAP 服务提供者和消息使用者数据交换规范
                            SOAP封装:Envelope,SOAP头(可选),SOAP体
                            SOAP编码规则:序列化方式 交换数据
                            SOAP RPC表示: 远程过程调用和应答协议
                            SOAP绑定:定义一个使用底层网络传输协议来完成节点间数据交换SOAP信封的约定
                        REST表述性状态转移
                            HTTP + XML 进行基于web的通信
                            简单性,缺少严格配置文件
                            只支持简单操作:POST GET PUT DELETE
                            强调信息本身,称为资源
                            原则:
                                网络上的所有事物都抽象为资源
                                每个资源对应唯一标识
                                通用连接器接口操作资源
                                对资源的各种操作不会改变资源标识
                                所有操作都是无状态的
                    编码格式 XML
                    传输协议 HTTP TCP/IP SMTP
                实现方式
                    其它底层实现方式 EJB COBAL COM/DCOM
                    Web Service
                                服务注册中心(服务描述)
                                /查找             \发布
                         服务请求者------绑定-----服务提供者(服务与描述)
                        动态绑定:通过服务注册中心
                        静态绑定:直接交互
                        分层:
                            底层传输 http
                            服务通信协议 SOAP REST
                            服务描述层 WSDl
                            服务层
                            业务流程 WSBPEL
                            服务注册层
                    服务注册表 SOA设计阶段
                        服务注册
                        服务位置
                        服务绑定
                    ESB企业服务总线 消除端到端交互 松散耦合
                        提供位置透明性的消息路由和寻址服务
                        提供服务注册和命名的管理功能
                        支持多种消息传递范型
                        支持多种可以广泛使用的传输协议
                        支持多种数据格式以及其相互转换
                        提供日志和监控功能
                        
            特定领域的软件架构DSSA
                垂直域 在确定领域通用架构
                水平域 在多个不同领域通用的部分 子系统
                基本活动(逐步求精)
                    领域分析 -> 领域需求(领域边界范围,数据源,功能模型)=>领域模型 
                        |
                    领域设计 获得DSSA(描述在领域模型中的解方案)
                        |
                    领域实现 开发和组织可复用信息
                建立过程 (并发 地鬼 反复 螺旋)
                    定义领域范围
                        |
                    定义领域特定元素 领域字典
                        |
                    定义领域特定的设计和实现需求约束
                        |
                    定于领域模型和架构
                        |
                    产生、搜集可复用的产品单元
                三层次模型
                    领域开发环境 -> 领域架构师
                    领域特定应用开发环境 -> 应用工程师
                    应用执行环境 -> 操作员
            
            基于架构的软件架构开发方法
                开发过程:
                需求
                |-->架构需求 <=====> 需求库
                |      |
                | |-架构设计---------------
                | |    |                  |
                | | 架构文档化            |
                | |    |                  |
                | |-架构复审           标识构建
                |      |                  |
                |   架构实现              |
                |      |                  |
                |   架构实现---------------
                |      |
                |---架构演化
                设计
                    提出架构模型
                        |
                |-->映射构件
                |       |
                |   分析构件相互作用
                |       |
                |   产生架构
                |       |
                |---设计评审
                实现
                    复审后的文档化架构
                            |
                        分析与设计-------|
                            |        |   |
                        构件实现     |   |
                            |        构  |
                        构件组装-----件  |
                            |        库  |
                        系统测试---------|
                            |
                        架构演化
                演化
                    需求变化归纳
                    架构演化计划
                    构建变动 ---> 构件库
                    跟新构件的相互作用
                    构件组装与测试
                    技术评审
                    演化后架构
        软件架构评估
            敏感点
            权衡点
                基于调查问卷的方式 检查表
                基于度量的方式 客观 量化 对架构十分了解
                基于场景的方式
                    确定应用领域的功能和软件架构的结构之间的映射
                    设计用于体现待评估质量属性的场景
                    分析软件架构对场景的支持程度
                    
                    架构权衡分析法ATAM
                        描述和介绍阶段
                            描述ATAM方法
                            描述业务动机
                            描述架构
                        调查和分析阶段
                            确定架构方法
                            生成质量属性效用树
                            分析架构方法
                        测试阶段
                            讨论场景和对场景分级
                            分析架构方法
                        报告阶段
                            描述评估结果
                    成本效益分析CBAM
                        整理场景
                        对场景进行细化
                        确定场景优先级
                        分配效用
                        确定期望的质量属性响应级别的应用
                        计算个架构策略的总收益
                        根绝受成本限制影响的投资报酬率选择架构策略
                    软件架构分析法SAAM(评价单个评价 还能比较多个架构)
                        形成场景
                        描述架构对场景分类和确定优先级
                        对场景进行单个评估
                        评估场景的相互作用
                        形成总体评价
        软件产品线
            双生命周期
                领域工程  -> 领域分析->领域设计->领域实现
                                  \领域模型\领域架构\领域可复用构建
                    应用工程  -> 需求分析->系统设计->系统实现
            SEI
                核心资源开发 <--->  产品开发
                        \             /
                         \           /
                             管理
            三生命周期
                            企业工程(操作喜欢 市场计划 企业架构计划)
                               |
                            领域工程
                            资源管理
                            应用工程
            软件产品线建立方式
                                    演化方式       革命方式
                基于现有的产品          ①             ②
                全新产品线              ③             ④
                
                风险 投资 周期 软硬件结合程度
            成功因素
                对该领域具备长期和深厚的经验
                核心库
                好的产品线架构
                好的管理(软件资源 人员组织 过程)支持
           
基于构件的开发
    构件:具有可重用价值和功能相对独立的软件单元或模块
    中间件
        功能:
            负责客户端和服务器间的连接和通信
            提供客户端与应用层的高效率通信机制
            提供应用层不同服务之间的互操作机制
            提供应用层与数据库之间的连接和控制
            提供一个多层结构应用开发和运行平台
            提供一个应用开发框架支持模块化的应用开发
            屏蔽硬件 OS 网络和SB
            提供交易管理机制 保证交易的一致性
            提供负载均衡和高可用性
            提供应用的安全机制与管理功能
            提供一组通用的服务去执行不同的功能,避免重复的工作和使应用之间可以协作
        主要分类
            远程过程调用RPC
            对象请求代理ORB
            远程方法调用RMI
            面向消息的中间件MOM
            事务处理监控器TPM
        J2EE
            客户层
                客户应用 浏览器
            web层----------------------------|
                Java服务器页面              J2EE服务器
            业务层---------------------------|
                EJB 会话bean 短暂会话
                    实体bean 持久化数据
                    消息驱动bean 会话bean+jms
            企业信息系统层
            
            MVC struts spring IOC
                hibernate(JDBC) ORM
                
            重量级 vs 轻量级
        .NET
                vs.net
        --------------------------------------------------
        .net enterprise servers
        .net framwork => CLR
        .net building block services
        --------------------------------------------------
                os
        
        j2ee vs .net
        JVM与CLR 
            bytecode -> 解释执行 跨平台
            IL -> jit -> localcode  针对 windows 优化
        多层分布式的应用支持
        安全性
        应用程序的部署
        可移植性
        外部支持

    企业应用集成
        表示集成
            界面集成
        数据集成
            中间件
        控制集成
            应用逻辑
        业务流程集成
            企业工作流集成
            
应用数学
    概率统计
        常用分布
            二项分布
            概率分布函数 Pk = C(nk)p(K)(1-p)(N-K)
            数学期望 E = np
            方差 D = np(1-p)
        几何分布
            Pk = p(1-p)(K-1)
            E = 1/p
            D = (1-p)/p(2)
        均匀分布
            p = 1/(b - a) or 0
            E = (a + b)/2
            D = (b-a)(2)/12
        样本均值
        样本方差
        样本标准差
    图论
        最小生成树(不唯一)
            普里姆算法
            克鲁斯卡尔算法
        最短路径
            迪杰斯特拉算法
        网络与最大流量
    组合分析
        排列组合
        抽屉原理
        容斥原理
    算法的选择与应用
        查找
        排序
    运筹方法
        网络计划技术
            项目管理-关键路径
            
                最早开始时间ES :所有紧前活动最早结束时间 从左向右
                      |
                最晚开工时间LS : 所有紧后工作的最晚开工时间 - 历时时间 从右向左
                
                若 LS - ES = 0 => 关键活动 => 关键路径(可能多条)
                
        线性规划
        决策
            
        预测
        库存管理
        排队论